name: Deploy to production

on: [push]

env:
  ECS_CLUSTER: blog-tool-cluster
  ECS_SERVICE: blog-tool-service
  ECS_TASK_DEFINITION: ./.github/cicd/definition.json
  CONTAINER_NAME: blog-tool-container
  REPOSITORY_NAME: blog-tool
  AWS_REGION_NAME: us-east-1
  PORT: 80
  
jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and Build
        run: |
          echo "PORT=${{ env.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.DB_HOST }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      #ECR pushh image to ecr

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # deploy image id with AWS ECS task definition

          #      - name: Fill in the new image ID in the Amazon ECS task definition
          #        id: task-def-thefilmcoin
          #        uses: aws-actions/amazon-ecs-render-task-definition@v1
          #        with:
          #          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          #          container-name: ${{ env.CONTAINER_NAME }}
          #          image: ${{ steps.build-image.outputs.image }}
          #
          #      - name: Deploy Amazon ECS task definition
          #        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          #        with:
          #          task-definition: ${{ steps.task-def-thefilmcoin.outputs.task-definition }}
          #          service: ${{ env.ECS_SERVICE }}
          #          cluster: ${{ env.ECS_CLUSTER }}
          #          wait-for-service-stability: true
